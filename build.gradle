plugins {
    id 'java'
    id 'idea'
    id 'jacoco'
    id 'checkstyle'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
    id "io.spring.dependency-management" version "1.0.11.RELEASE"
}

idea {
    project {
        languageLevel 18
    }
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

shadowJar {
    archiveBaseName.set('grabber')
    archiveVersion.set('1.0')
    archiveClassifier.set('')
    manifest {
        attributes 'Main-Class': 'ru.job4j.grabber.Grabber'
    }
}

group = 'ru.job4j'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

checkstyle {
    project.ext.checkstyleVersion = '10.12.0'
    project.ext.sevntuChecksVersion = '1.44.1'

    toolVersion '8.36.1'
    configFile file("$projectDir/checkstyle.xml")

    dependencies{
        assert project.hasProperty("checkstyleVersion")

        checkstyle "com.puppycrawl.tools:checkstyle:${checkstyleVersion}"
    }
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.boot:spring-boot-dependencies:2.5.4'
    }
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.24.2'
    testImplementation group: 'com.h2database', name: 'h2', version: '1.3.148'
    testCompileOnly 'org.projectlombok:lombok:1.18.28'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.28'

    compileOnly 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'
    implementation group: 'org.quartz-scheduler', name: 'quartz', version: '2.3.2'
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.2.27'
    implementation group: 'org.jsoup', name: 'jsoup', version: '1.15.3'
}

//jar {
//    manifest {
//        attributes(
//                'Main-Class': 'ru.job4j.grabber.Grabber'
//        )
//    }
//}
tasks.build.dependsOn tasks.shadowJar

task managedVersions {
    doLast {
        dependencyManagement.managedVersions.each {
            println it
        }
    }
}

jacocoTestReport {
    dependsOn test
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}